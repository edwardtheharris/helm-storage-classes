# tests/daemonset_test_suite.yaml
suite: "CSI Driver LVM DaemonSet Test Suite"
release:
  name: lvm
  namespace: csi-driver-lvm
values:
  - ../values.yaml
templates:
  - "charts/csi-driver-lvm/templates/plugin.yaml"

tests:
  - it: "should render DaemonSet with correct metadata"
    asserts:
      - isKind:
          of: DaemonSet
      - matchRegex:
          path: metadata.name
          pattern: "^csi-driver-lvm-plugin$"
      - equal:
          path: metadata.labels
          value:
            heritage: "Helm"
            release: "lvm"
    documentSelector:
      path: kind
      value: DaemonSet

  - it: "should render DaemonSet with correct spec configurations"
    asserts:
      - equal:
          path: spec.revisionHistoryLimit
          value: 10
      - matchRegex:
          path: spec.selector.matchLabels.app
          pattern: "^csi-driver-lvm-plugin$"
      - matchRegex:
          path: spec.template.metadata.labels.app
          pattern: "^csi-driver-lvm-plugin$"
      - equal:
          path: spec.template.spec.serviceAccountName
          value: "csi-driver-lvm-plugin"
    documentSelector:
      path: kind
      value: DaemonSet

  - it: "should render DaemonSet with correct containers"
    asserts:
      - equal:
          path: spec.template.spec.containers[0].image
          value:
            k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.5.1
      - equal:
          path: spec.template.spec.containers[1]
          value:
            name: csi-driver-lvm-plugin
            args:
              - --drivername=lvm.csi.metal-stack.io
              - --endpoint=unix:///csi/csi.sock
              - --hostwritepath=/etc/lvm
              - --devices=/dev/sd[a-z]1
              - --nodeid=$(KUBE_NODE_NAME)
              - --vgname=vg.local
              - --namespace=csi-driver-lvm
              - --provisionerimage=ghcr.io/metal-stack/csi-driver-lvm-provisioner:v0.5.2
              - --pullpolicy=IfNotPresent
            env:
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            image: "ghcr.io/metal-stack/csi-driver-lvm:v0.5.2"
            imagePullPolicy: IfNotPresent
            livenessProbe:
              failureThreshold: 5
              httpGet:
                path: /healthz
                port: healthz
                scheme: HTTP
              initialDelaySeconds: 10
              periodSeconds: 2
              successThreshold: 1
              timeoutSeconds: 3
            ports:
            - containerPort: 9898
              name: healthz
              protocol: TCP
            resources: {}
            securityContext:
              privileged: true
            terminationMessagePath: /termination.log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /csi
              name: socket-dir
            - mountPath: /var/lib/kubelet/pods
              mountPropagation: Bidirectional
              name: mountpoint-dir
            - mountPath: /var/lib/kubelet/plugins
              mountPropagation: Bidirectional
              name: plugins-dir
            - mountPath: /dev
              name: dev-dir
              mountPropagation: Bidirectional
            - mountPath: /lib/modules
              name: mod-dir
            - mountPath: /etc/lvm/backup
              name: lvmbackup
              mountPropagation: Bidirectional
            - mountPath: /etc/lvm/cache
              name: lvmcache
              mountPropagation: Bidirectional
            - mountPath: /run/lock/lvm
              name: lvmlock
              mountPropagation: Bidirectional
      - equal:
          path: spec.template.spec.containers[2]
          value:
            name: liveness-probe
            args:
            - --csi-address=/csi/csi.sock
            - --health-port=9898
            image: k8s.gcr.io/sig-storage/livenessprobe:v2.7.0
            imagePullPolicy: IfNotPresent
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /csi
              name: socket-dir
    documentSelector:
      path: kind
      value: DaemonSet

  - it: "should render DaemonSet with correct volumes"
    asserts:
      - equal:
          path: spec.template.spec.volumes
          value:
            - name: "socket-dir"
              hostPath:
                path: "/var/lib/kubelet/plugins/csi-driver-lvm"
                type: "DirectoryOrCreate"
            - name: "mountpoint-dir"
              hostPath:
                path: "/var/lib/kubelet/pods"
                type: "DirectoryOrCreate"
            - name: "registration-dir"
              hostPath:
                path: "/var/lib/kubelet/plugins_registry"
                type: "Directory"
            - name: "plugins-dir"
              hostPath:
                path: "/var/lib/kubelet/plugins"
                type: "Directory"
            - name: "dev-dir"
              hostPath:
                path: "/dev"
                type: "Directory"
            - name: "mod-dir"
              hostPath:
                path: "/lib/modules"
            - name: "lvmbackup"
              hostPath:
                path: "/etc/lvm/backup"
                type: "DirectoryOrCreate"
            - name: "lvmcache"
              hostPath:
                path: "/etc/lvm/cache"
                type: "DirectoryOrCreate"
            - name: "lvmlock"
              hostPath:
                path: "/etc/lvm/lock"
                type: "DirectoryOrCreate"
    documentSelector:
      path: kind
      value: DaemonSet
