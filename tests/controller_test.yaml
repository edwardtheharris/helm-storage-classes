# yaml-language-server: $schema=https://raw.githubusercontent.com/helm-unittest/helm-unittest/main/schema/helm-testsuite.json
# tests/controller_test.yaml
suite: "CSI Driver LVM StatefulSet Test Suite"
templates:
  - "charts/csi-driver-lvm/templates/controller.yaml"

tests:
  - asserts:
      - isKind:
          of: StatefulSet
      - matchRegex:
          path: metadata.name
          pattern: "^csi-driver-lvm-controller$"
      - equal:
          path: metadata.labels
          value:
            heritage: "Helm"
            release: "lvm"
    it: "should render StatefulSet with correct metadata"

  - asserts:
      - equal:
          path: spec.serviceName
          value: "csi-driver-lvm-controller"
      - equal:
          path: spec.replicas
          value: 1
      - matchRegex:
          path: spec.selector.matchLabels.app
          pattern: "^csi-driver-lvm-controller$"
      - matchRegex:
          path: spec.template.metadata.labels.app
          pattern: "^csi-driver-lvm-controller$"
    it: "should render StatefulSet with correct spec configurations"

  - asserts:
      - equal:
          path: spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey
          value: "kubernetes.io/hostname"
      - equal:
          path: spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].labelSelector.matchExpressions[0].key
          value: "app"
      - equal:
          path: spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].labelSelector.matchExpressions[0].operator
          value: "In"
      - equal:
          path: spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].labelSelector.matchExpressions[0].values
          value:
            - "csi-driver-lvm-plugin"
    it: "should render StatefulSet with correct affinity configuration"

  - asserts:
      - equal:
          path: spec.template.spec.serviceAccountName
          value: "csi-driver-lvm-controller"
    it: "should render StatefulSet with correct serviceAccountName"

  - asserts:
      - equal:
          path: spec.template.spec.containers
          value:
            - name: "csi-attacher"
              image: "k8s.gcr.io/sig-storage/csi-attacher:v3.5.0"
              imagePullPolicy: "IfNotPresent"
              args:
                - "--v=5"
                - "--csi-address=/csi/csi.sock"
              securityContext:
                privileged: true
              volumeMounts:
                - mountPath: "/csi"
                  name: "socket-dir"
            - name: "csi-provisioner"
              image: "k8s.gcr.io/sig-storage/csi-provisioner:v3.2.1"
              imagePullPolicy: "IfNotPresent"
              args:
                - "-v=5"
                - "--csi-address=/csi/csi.sock"
                - "--feature-gates=Topology=true"
              securityContext:
                privileged: true
              volumeMounts:
                - mountPath: "/csi"
                  name: "socket-dir"
            - name: "csi-resizer"
              image: "k8s.gcr.io/sig-storage/csi-resizer:v1.6.0"
              imagePullPolicy: "IfNotPresent"
              args:
                - "-v=5"
                - "-csi-address=/csi/csi.sock"
              securityContext:
                privileged: true
              volumeMounts:
                - mountPath: "/csi"
                  name: "socket-dir"
    it: "should render StatefulSet with correct containers"

  - asserts:
      - equal:
          path: spec.template.spec.volumes
          value:
            - name: "socket-dir"
              hostPath:
                path: "/var/lib/kubelet/plugins/csi-driver-lvm"
                type: "DirectoryOrCreate"
    it: "should render StatefulSet with correct volumes"
