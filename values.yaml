###
# ```{rubric} CSI Driver LVM configuration
# ```
# ---
# This file contains the settings required to set up a {term}`StorageClass` that
# supports dynamic provisioning of Logical Volume Manager volumes.
#
# Enable, if you want to install storage classes with v0.3.x
# backward-compatible `csi-lvm-sc-*` names
#
# ```{literalinclude} /csi-driver-lvm/values.yaml
# :language: yaml
# :start-at: "compat03x: false\n"
# :end-before: "####"
# ```
compat03x: false
customCSISidecars:
  ###
  # To enable custom CSI Sidecars, you should
  # uncomment the lines in the code block below and set
  # `enabled: true`.
  #
  # Set to `false` by default.
  #
  # ```{code-block} yaml
  # :caption: CSI Sidecar Images
  # attacher: k8s.gcr.io/sig-storage/csi-attacher:v3.5.0
  # livenessprobe: k8s.gcr.io/sig-storage/livenessprobe:v2.7.0
  # provisioner: k8s.gcr.io/sig-storage/csi-provisioner:v3.2.1
  # registrar: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.5.1
  # resizer: k8s.gcr.io/sig-storage/csi-resizer:v1.6.0
  # ```
  enabled: true
  attacher: k8s.gcr.io/sig-storage/csi-attacher:v3.5.0
  livenessprobe: k8s.gcr.io/sig-storage/livenessprobe:v2.7.0
  provisioner: k8s.gcr.io/sig-storage/csi-provisioner:v3.2.1
  registrar: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.5.1
  resizer: k8s.gcr.io/sig-storage/csi-resizer:v1.6.0
###
# Configure a custom {term}`kubelet` write path if necessary.
kubernetes:
  kubeletPath: /var/lib/kubelet
####

###
# ```{rubric} Logical Volume Manager
# ```
# ---
# This is where you will define the {term}`StorageClass` for this driver along
# with a few other settings.
#
# ```{literalinclude} /csi-driver-lvm/values.yaml
# :language: yaml
# :start-at: "lvm:\n"
# :end-before: "####"
# ```
lvm:
  ###
  # This one you should change
  devicePattern: /dev/(nvme[0-9]n[0-9]|sd[a-z][0-9])
  driverName: lvm.csi.metal-stack.io
  ###
  # You will want to change this for read-only file systems
  # For example, in Talos OS, set this to {file}`/var/etc/lvm`.
  hostWritePath: /etc/lvm
  ###
  # these are primarily for testing purposes
  storageClassStub: csi-lvm
  vgName: csi-lvm
####

###
# ```{rubric} Node Selection
# ```
# ---
# The plugin {term}`DaemonSet` will run on all nodes if it has a toleration,
# so it is not necessary to set a nodeSelector for it.
#
# ```{literalinclude} /csi-driver-lvm/values.yaml
# :language: yaml
# :start-at: "nodeSelector:\n"
# :end-before: "####"
# ```
nodeSelector:
  plugin:
    kubernetes.io/os: linux
  provisioner:
    node-role.kubernetes.io/control-plane: "true"
####

###
# ```{rubric} Plugin Image
# ```
# ---
# Use this to configure settings for the CSI Plugin Image.
#
# ```{literalinclude} /csi-driver-lvm/values.yaml
# :language: yaml
# :start-at: "pluginImage:\n"
# :end-before: "####\n"
# ```
pluginImage:
  pullPolicy: IfNotPresent
  repository: ghcr.io/metal-stack/csi-driver-lvm
  tag: v0.5.2
###
# ```{rubric} Provisioner Image
# ```
# ---
# Use this to configure settings for the CSI Provisioner Image
#
# ```{literalinclude} /csi-driver-lvm/values.yaml
# :language: yaml
# :start-at: "provisionerImage:\n"
# :end-at: "  tag: v0.5.2\n"
# ```
provisionerImage:
  pullPolicy: IfNotPresent
  repository: ghcr.io/metal-stack/csi-driver-lvm-provisioner
  tag: v0.5.2
###
# ```{rubric} Role Based Access Control
# ```
# ---
# Set `create: true` if you want to enable this.
#
# ```{literalinclude} /csi-driver-lvm/values.yaml
# :language: yaml
# :start-at: "rbac:\n"
# :end-at: "  pspEnabled: true\n"
# ```
rbac:
  create: true
  pspEnabled: true
sidecarImages:
  attacher: k8s.gcr.io/sig-storage/csi-attacher:v3.5.0
  livenessprobe: k8s.gcr.io/sig-storage/livenessprobe:v2.7.0
  provisioner: k8s.gcr.io/sig-storage/csi-provisioner:v3.2.1
  registrar: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.5.1
  resizer: k8s.gcr.io/sig-storage/csi-resizer:v1.6.0
  ####
  ####

  ###
  # ```{rubric} StorageClass configuration
  # ```
  # ---
  # There are three {term}`StorageClass`es defined here, linear, mirror, and
  # striped. These are what they sound like. That is linear will provision a
  # plain {term}`PersistentVolume` as block storage, mirror will provision
  # something similar to a {term}`RAID` 1 setup in the {term}`PersistentVolume`,
  # and striped will provision something similar to a {term}`RAID` 0 setup in the
  # {term}`PersistentVolume`.
  #
  # ```{admonition} Mirror and Striped
  # The driver does not support combining modes to create RAID 10 setups, or
  # or similar arrangements as of the time of this writing.
  # ```
  #
  # ```{literalinclude} /values.yaml
  # :language: yaml
  # :start-at: "lvm:\n"
  # :end-before: "###\n"
  # ```
  ###
  # ```{rubric} StorageClass configuration
  # ```
  # ---
  # There are three {term}`StorageClass`es defined here, linear, mirror, and
  # striped. These are what they sound like. That is linear will provision a
  # plain {term}`PersistentVolume` as block storage, mirror will provision
  # something similar to a {term}`RAID` 1 setup in the {term}`PersistentVolume`,
  # and striped will provision something similar to a {term}`RAID` 0 setup in the
  # {term}`PersistentVolume`.
  #
  # ```{admonition} Mirror and Striped
  # The driver does not support combining modes to create RAID 10 setups, or
  # or similar arrangements as of the time of this writing.
  # ```
  #
  # ```{literalinclude} /values.yaml
  # :language: yaml
  # :start-at: "lvm:\n"
  # :end-before: "###\n"
  # ```
  customCSISidecars:
    attacher: k8s.gcr.io/sig-storage/csi-attacher:v3.5.0
    enabled: true
    livenessprobe: k8s.gcr.io/sig-storage/livenessprobe:v2.7.0
    provisioner: k8s.gcr.io/sig-storage/csi-provisioner:v3.2.1
    registrar: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.5.1
    resizer: k8s.gcr.io/sig-storage/csi-resizer:v1.6.0
  enabled: true
  lvm:
    devicePattern: /dev/(sd[a-z]|nvme[0-9]n[0-9]p)[0-1]
    driverName: lvm.csi.metal-stack.io
    vgName: vg.local
  nodeSelector:
    plugin:
      kubernetes.io/os: linux
    provisioner:
      kubernetes.io/os: linux
  rbac:
    create: true
    pspEnabled: true
  storageClasses:
    linear:
      enabled: true
      name: csi-lvm-linear
      reclaimPolicy: Retain
    mirror:
      enabled: true
      name: csi-lvm-mirror
      reclaimPolicy: Retain
    striped:
      enabled: true
      name: csi-lvm-striped
      reclaimPolicy: Delete
    tolerations:
      plugin:
        - effect: Schedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
      provisioner:
        - effect: Schedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
###
# ```{rubric} Driver workload tolerations
# ```
# ---
# Configure the driver to run on control plane or other tainted nodes by
# adding {term}`Tolerations` here.
#
# ```{literalinclude} /csi-driver-lvm/values.yaml
# :language: yaml
# :start-at: "tolerations:\n"
# ```
tolerations:
  plugin:
    - key: node-role.kubernetes.io/control-plane
      operator: Exists
      effect: NoSchedule
  provisioner:
    - key: node-role.kubernetes.io/control-plane
      operator: Exists
      effect: NoSchedule
