---
# Source: lvm/charts/csi-driver-lvm/templates/controller.yaml
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: csi-driver-lvm-controller
  labels:
    heritage: Helm
    release: lvm
spec:
  allowedHostPaths:
  - pathPrefix: /var/lib/kubelet/plugins/csi-driver-lvm
  fsGroup:
    rule: RunAsAny
  privileged: true
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  volumes:
  - secret
  - hostPath
---
# Source: lvm/charts/csi-driver-lvm/templates/plugin.yaml
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: csi-driver-lvm-plugin
  labels:
    heritage: Helm
    release: lvm
spec:
  allowedHostPaths:
  - pathPrefix: /lib/modules
  - pathPrefix: /etc/lvm/cache
  - pathPrefix: /var/lib/kubelet/plugins/csi-driver-lvm
  - pathPrefix: /etc/lvm/backup
  - pathPrefix: /etc/lvm/lock
  - pathPrefix: /var/lib/kubelet/plugins
  - pathPrefix: /var/lib/kubelet/plugins_registry
  - pathPrefix: /dev
  - pathPrefix: /var/lib/kubelet/pods
  fsGroup:
    rule: RunAsAny
  hostPorts:
  - max: 0
    min: 0
  privileged: true
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  volumes:
  - secret
  - hostPath
---
# Source: lvm/charts/csi-driver-lvm/templates/controller.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: csi-driver-lvm-controller
  labels:
    heritage: Helm
    release: lvm
---
# Source: lvm/charts/csi-driver-lvm/templates/plugin.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: csi-driver-lvm-plugin
  labels:
    heritage: Helm
    release: lvm
---
# Source: lvm/charts/csi-driver-lvm/templates/storageclasses.yaml
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: csi-driver-lvm-linear
  labels:
    heritage: Helm
    release: lvm
provisioner: lvm.csi.metal-stack.io
reclaimPolicy: Delete
volumeBindingMode: WaitForFirstConsumer
allowVolumeExpansion: true
parameters:
  type: "linear"
---
# Source: lvm/charts/csi-driver-lvm/templates/controller.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-driver-lvm-controller
  labels:
    heritage: Helm
    release: lvm
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "update", "patch", "create", "delete"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csinodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims/status"]
    verbs: ["update", "patch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csinodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments/status"]
    verbs: ["patch"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]
---
# Source: lvm/charts/csi-driver-lvm/templates/plugin.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-driver-lvm-plugin
  labels:
    heritage: Helm
    release: lvm
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "update", "patch", "create", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims/status"]
    verbs: ["update", "patch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["list", "get", "watch", "create", "delete"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
---
# Source: lvm/charts/csi-driver-lvm/templates/controller.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-driver-lvm-controller
  labels:
    heritage: Helm
    release: lvm
subjects:
  - kind: ServiceAccount
    name: csi-driver-lvm-controller
    namespace: csi-driver-lvm
roleRef:
  kind: ClusterRole
  name: csi-driver-lvm-controller
  apiGroup: rbac.authorization.k8s.io
---
# Source: lvm/charts/csi-driver-lvm/templates/plugin.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-driver-lvm-plugin
  labels:
    heritage: Helm
    release: lvm
subjects:
  - kind: ServiceAccount
    name: csi-driver-lvm-plugin
    namespace: csi-driver-lvm
roleRef:
  kind: ClusterRole
  name: csi-driver-lvm-plugin
  apiGroup: rbac.authorization.k8s.io
---
# Source: lvm/charts/csi-driver-lvm/templates/controller.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: csi-driver-lvm-controller
  labels:
    heritage: Helm
    release: lvm
rules:
- apiGroups:
  - policy
  resourceNames:
  - csi-driver-lvm-controller
  resources:
  - podsecuritypolicies
  verbs:
  - use
---
# Source: lvm/charts/csi-driver-lvm/templates/plugin.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: csi-driver-lvm-plugin
  labels:
    heritage: Helm
    release: lvm
rules:
- apiGroups:
  - policy
  resourceNames:
  - csi-driver-lvm-plugin
  resources:
  - podsecuritypolicies
  verbs:
  - use
---
# Source: lvm/charts/csi-driver-lvm/templates/controller.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: csi-driver-lvm-controller
  labels:
    heritage: Helm
    release: lvm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: csi-driver-lvm-controller
subjects:
- kind: ServiceAccount
  name: csi-driver-lvm-controller
  namespace: csi-driver-lvm
---
# Source: lvm/charts/csi-driver-lvm/templates/plugin.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: csi-driver-lvm-plugin
  labels:
    heritage: Helm
    release: lvm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: csi-driver-lvm-plugin
subjects:
- kind: ServiceAccount
  name: csi-driver-lvm-plugin
  namespace: csi-driver-lvm
---
# Source: lvm/charts/csi-driver-lvm/templates/plugin.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: csi-driver-lvm-plugin
  labels:
    heritage: Helm
    release: lvm
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: csi-driver-lvm-plugin
  template:
    metadata:
      labels:
        app: csi-driver-lvm-plugin
    spec:
      serviceAccountName: csi-driver-lvm-plugin
      containers:
      - name: node-driver-registrar
        args:
        - --v=5
        - --csi-address=/csi/csi.sock
        - --kubelet-registration-path=/var/lib/kubelet/plugins/csi-driver-lvm/csi.sock
        env:
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.5.1
        imagePullPolicy: IfNotPresent
        resources: {}
        securityContext:
          privileged: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /csi
          name: socket-dir
        - mountPath: /registration
          name: registration-dir
      - name: csi-driver-lvm-plugin
        args:
        - --drivername=lvm.csi.metal-stack.io
        - --endpoint=unix:///csi/csi.sock
        - --hostwritepath=/etc/lvm
        - --devices=/dev/sd[a-z]1
        - --nodeid=$(KUBE_NODE_NAME)
        - --vgname=vg.local
        - --namespace=csi-driver-lvm
        - --provisionerimage=ghcr.io/metal-stack/csi-driver-lvm-provisioner:v0.5.2
        - --pullpolicy=IfNotPresent
        env:
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        image: "ghcr.io/metal-stack/csi-driver-lvm:v0.5.2"
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: healthz
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 2
          successThreshold: 1
          timeoutSeconds: 3
        ports:
        - containerPort: 9898
          name: healthz
          protocol: TCP
        resources: {}
        securityContext:
          privileged: true
        terminationMessagePath: /termination.log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /csi
          name: socket-dir
        - mountPath: /var/lib/kubelet/pods
          mountPropagation: Bidirectional
          name: mountpoint-dir
        - mountPath: /var/lib/kubelet/plugins
          mountPropagation: Bidirectional
          name: plugins-dir
        - mountPath: /dev
          name: dev-dir
          mountPropagation: Bidirectional
        - mountPath: /lib/modules
          name: mod-dir
        - mountPath: /etc/lvm/backup
          name: lvmbackup
          mountPropagation: Bidirectional
        - mountPath: /etc/lvm/cache
          name: lvmcache
          mountPropagation: Bidirectional
        - mountPath: /run/lock/lvm
          name: lvmlock
          mountPropagation: Bidirectional
      - name: liveness-probe
        args:
        - --csi-address=/csi/csi.sock
        - --health-port=9898
        image: k8s.gcr.io/sig-storage/livenessprobe:v2.7.0
        imagePullPolicy: IfNotPresent
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /csi
          name: socket-dir
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - hostPath:
          path: /var/lib/kubelet/plugins/csi-driver-lvm
          type: DirectoryOrCreate
        name: socket-dir
      - hostPath:
          path: /var/lib/kubelet/pods
          type: DirectoryOrCreate
        name: mountpoint-dir
      - hostPath:
          path: /var/lib/kubelet/plugins_registry
          type: Directory
        name: registration-dir
      - hostPath:
          path: /var/lib/kubelet/plugins
          type: Directory
        name: plugins-dir
      - hostPath:
          path: /dev
          type: Directory
        name: dev-dir
      - hostPath:
          path: /lib/modules
        name: mod-dir
      - hostPath:
          path: /etc/lvm/backup
          type: DirectoryOrCreate
        name: lvmbackup
      - hostPath:
          path: /etc/lvm/cache
          type: DirectoryOrCreate
        name: lvmcache
      - hostPath:
          path: /etc/lvm/lock
          type: DirectoryOrCreate
        name: lvmlock
---
# Source: lvm/charts/csi-driver-lvm/templates/controller.yaml
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: csi-driver-lvm-controller
  labels:
    heritage: Helm
    release: lvm
spec:
  serviceName: csi-driver-lvm-controller
  replicas: 1
  selector:
    matchLabels:
      app: csi-driver-lvm-controller
  template:
    metadata:
      labels:
        app: csi-driver-lvm-controller
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - csi-driver-lvm-plugin
            topologyKey: kubernetes.io/hostname
      serviceAccountName: csi-driver-lvm-controller
      containers:
        - name: csi-attacher
          image: k8s.gcr.io/sig-storage/csi-attacher:v3.5.0
          imagePullPolicy: IfNotPresent
          args:
            - --v=5
            - --csi-address=/csi/csi.sock
          securityContext:
            privileged: true
          volumeMounts:
          - mountPath: /csi
            name: socket-dir
        - name: csi-provisioner
          image: k8s.gcr.io/sig-storage/csi-provisioner:v3.2.1
          imagePullPolicy: IfNotPresent
          args:
            - -v=5
            - --csi-address=/csi/csi.sock
            - --feature-gates=Topology=true
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
        - name: csi-resizer
          image: k8s.gcr.io/sig-storage/csi-resizer:v1.6.0
          imagePullPolicy: IfNotPresent
          args:
            - -v=5
            - -csi-address=/csi/csi.sock
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
      volumes:
        - hostPath:
            path: /var/lib/kubelet/plugins/csi-driver-lvm
            type: DirectoryOrCreate
          name: socket-dir
---
# Source: lvm/charts/csi-driver-lvm/templates/storageclasses.yaml
---
---
# Source: lvm/charts/csi-driver-lvm/templates/common.yaml
apiVersion: storage.k8s.io/v1
kind: CSIDriver
metadata:
  name: lvm.csi.metal-stack.io
  labels:
    heritage: Helm
    release: lvm
spec:
  volumeLifecycleModes:
  - Persistent
  - Ephemeral
  podInfoOnMount: true
  attachRequired: false
---
# Source: lvm/templates/test-csi-driver-lvm-pod.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: csi-driver-lvm-pod-test
  namespace: csi-driver-lvm
  annotations:
    helm.sh/hook: test
  labels:
    app.kubernetes.io/name: csi-driver-lvm-pod-test
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
  storageClassName: csi-driver-lvm-linear
---
# Source: lvm/templates/test-csi-driver-lvm-pod.yaml
apiVersion: v1
kind: Pod
metadata:
  name: csi-driver-lvm-pod-test
  namespace: csi-driver-lvm
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: hook-succeeded
    app.kubernetes.io/name: csi-driver-lvm-pod-test
  labels:
    name: csi-driver-lvm-pod-test
    app.kubernetes.io/name: csi-driver-lvm-pod-test
spec:
  restartPolicy: Never
  containers:
    - image: dandb79/lsblk-testing:v1.2
      command: ["lsblk"]
      name: csi-driver-lvm-pod-test
      volumeMounts:
        - name: lvm
          mountPath: /data
  nodeSelector:
    kubernetes.io/os: linux
  volumes:
    - name: lvm
      persistentVolumeClaim:
        claimName: csi-driver-lvm-pod-test
---
# Source: lvm/templates/test-csi-driver-lvm-sts.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: csi-driver-lvm-sts-test
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: hook-succeeded,hook-failed,before-hook-creation
spec:
  selector:
    matchLabels:
      name: csi-driver-lvm-sts-test
  serviceName: "csi-driver-lvm-test"
  replicas: 1
  template:
    metadata:
      labels:
        name: csi-driver-lvm-sts-test
    spec:
      restartPolicy: Always
      containers:
        - image: dandb79/lsblk-testing:v1.2
          command: ["/bin/sh", "-c"]
          args: [ "lsblk" ]
          name: csi-driver-lvm-linear-test
          volumeMounts:
            - name: lvm
              mountPath: /data
      nodeSelector:
        kubernetes.io/os: linux
  volumeClaimTemplates:
    - metadata:
        name: lvm
        annotations:
          helm.sh/hook: test
          helm.sh/hook-delete-policy: hook-succeeded,hook-failed,before-hook-creation
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 100Mi
        storageClassName: csi-driver-lvm-linear
